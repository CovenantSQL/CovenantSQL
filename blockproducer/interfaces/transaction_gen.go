package interfaces

// Code generated by github.com/CovenantSQL/HashStablePack DO NOT EDIT.

import (
	hsp "github.com/CovenantSQL/HashStablePack/marshalhash"
)

// MarshalHash marshals for hash
func (z AccountNonce) MarshalHash() (o []byte, err error) {
	var b []byte
	o = hsp.Require(b, z.Msgsize())
	o = hsp.AppendUint32(o, uint32(z))
	return
}

// Msgsize returns an upper bound estimate of the number of bytes occupied by the serialized message
func (z AccountNonce) Msgsize() (s int) {
	s = hsp.Uint32Size
	return
}

// MarshalHash marshals for hash
func (z TransactionState) MarshalHash() (o []byte, err error) {
	var b []byte
	o = hsp.Require(b, z.Msgsize())
	o = hsp.AppendUint32(o, uint32(z))
	return
}

// Msgsize returns an upper bound estimate of the number of bytes occupied by the serialized message
func (z TransactionState) Msgsize() (s int) {
	s = hsp.Uint32Size
	return
}

// MarshalHash marshals for hash
func (z TransactionType) MarshalHash() (o []byte, err error) {
	var b []byte
	o = hsp.Require(b, z.Msgsize())
	o = hsp.AppendUint32(o, uint32(z))
	return
}

// Msgsize returns an upper bound estimate of the number of bytes occupied by the serialized message
func (z TransactionType) Msgsize() (s int) {
	s = hsp.Uint32Size
	return
}
